version: "3.9"

services:
  ruuter-v1-public:
    container_name: ruuter-v1-public
    image: riaee/byk-chatbot-public-ruuter:05
    environment:
      - csrf.enabled=false
      - csrf.tim_userinfo_url=
      - csrf.ruuter_services_whitelist=
      - legacy-portal-integration.sessionCookieDomain=buerokratt.ee
      - allowed.requested.method.types=POST,GET
      - ruuter.cors.allowedOrigins=https://buerokratt.ee,https://admin.buerokratt.ee,https://tim.buerokratt.ee,http://localhost:3001,http://localhost:3002,http://localhost:3003,http://localhost:3004,http://localhost:8086
      - maxRequestSizeBytes=10000000000
      - default.requested.method.type=POST
      - incoming.request.external.validation.enabled=false
      - requested.method.type.error.http.response.code=200
      - verify.requested.method.type=false
      - incoming.request.external.validation.endpoint=
      - headers.contentSecurityPolicy=
      - logging.level.root=INFO
    volumes:
      - ./setup/ruuter/server.xml:/usr/local/tomcat/conf/server.xml:ro
      - ./setup/ruuter/public.urls.docker.json:/usr/local/tomcat/urls.env.json:ro
      - ./setup/ruuter/cert.crt:/usr/local/tomcat/conf/cert.crt:ro
      - ./setup/ruuter/key.key:/usr/local/tomcat/conf/key.key:ro
      - ./DSL.Ruuter-v1.public:/usr/local/tomcat/configurations
    ports:
      - 8080:8443
    restart: always
    networks:
      - bykstack
    cpus: "0.5" # Example CPU limit
    mem_limit: "512M" # Example memory limit

  ruuter-v1-private:
    container_name: ruuter-v1-private
    image: riaee/byk-chatbot-private-ruuter:05
    environment:
      - legacy-portal-integration.sessionCookieDomain=buerokratt.ee
      - logging.level.root=INFO
      - ruuter.cors.allowedOrigins=https://buerokratt.ee,https://admin.buerokratt.ee,https://tim.buerokratt.ee,http://localhost:3001,http://localhost:3002,http://localhost:3003,http://localhost:3004
      - headers.contentSecurityPolicy=
      - maxRequestSizeBytes=10000000000
      - incoming.request.external.validation.enabled=false
      - incoming.request.external.validation.endpoint=
      - verify.requested.method.type=false
      - allowed.requested.method.types=POST
      - default.requested.method.type=POST
      - requested.method.type.error.http.response.code=200
      - csrf.enabled=false
      - csrf.tim_userinfo_url=
      - csrf.ruuter_services_whitelist=
      - ip-whitelist.routes[0].ips[0]=127.0.0.1
      - ip-whitelist.routes[0].patterns[0]=/functions/*
      - ip-whitelist.routes[1].ips[0]=127.0.0.1
      - ip-whitelist.routes[1].patterns[0]=/get-location-coordinates
      - ip-whitelist.routes[1].patterns[1]=/get-weather-data
      - ip-whitelist.routes[1].patterns[2]=/get-weather-station-id
      - ip-whitelist.routes[1].patterns[3]=/get-weather
      - ip-whitelist.routes[1].patterns[4]=/param_string_length
    volumes:
      - ./setup/ruuter/server.xml:/usr/local/tomcat/conf/server.xml:ro
      - ./setup/ruuter/private.urls.docker.json:/usr/local/tomcat/urls.env.json:ro
      - ./setup/ruuter/cert.crt:/usr/local/tomcat/conf/cert.crt:ro
      - ./setup/ruuter/key.key:/usr/local/tomcat/conf/key.key:ro
      - ./DSL.Ruuter-v1.private:/usr/local/tomcat/configurations
    ports:
      - 8090:8443
    restart: always
    networks:
      - bykstack
    cpus: "0.5" # Example CPU limit
    mem_limit: "512M" # Example memory limit

  ruuter-v2-private:
    container_name: ruuter-v2-private
    image: ghcr.io/buerokratt/ruuter:pre-alpha-2.2.0
    environment:
      - application.cors.allowedOrigins=http://localhost:8082,http://localhost:3001,http://localhost:3003
      - application.httpCodesAllowList=200,201,202,400,401,403,500
      - application.logging.displayRequestContent=true
      - application.logging.displayResponseContent=true
      - server.port=8088
    volumes:
      - ./DSL.Ruuter.private/DSL:/DSL
    ports:
      - 8088:8088
    networks:
      - bykstack
    cpus: "0.5" # Example CPU limit
    mem_limit: "512M" # Example memory limit

  ruuter-v2-public:
    container_name: ruuter-v2-public
    image: ghcr.io/buerokratt/ruuter:pre-alpha-2.2.0
    environment:
      - application.cors.allowedOrigins=http://localhost:8086,http://localhost:3001,http://localhost:3003,http://localhost:8080
      - application.httpCodesAllowList=200,201,202,400,401,403,500
      - application.logging.displayRequestContent=true
      - application.logging.displayResponseContent=true
      - server.port=8086
    volumes:
      - ./DSL.Ruuter.public/DSL:/DSL
    ports:
      - 8086:8086
    networks:
      - bykstack
    cpus: "0.5" # Example CPU limit
    mem_limit: "512M" # Example memory limit

  dmapper:
    container_name: dmapper
    image: riaee/byk-dmapper:11
    environment:
      - logging.level.root=INFO
      - headers.contentSecurityPolicy=
      - cors.allowedOrigins=ruuter.test.buerokratt.ee,https://ruuter.aadress.ee
    ports:
      - 3000:3000
    volumes:
      - ./setup/dmapper/server.xml:/usr/local/tomcat/conf/server.xml:ro
      - ./setup/dmapper/cert.crt:/usr/local/tomcat/conf/tls.crt:ro
      - ./setup/dmapper/key.key:/usr/local/tomcat/conf/tls.key:ro
      - ./DSL.DMapper:/usr/local/tomcat/templates/v2/
    restart: always
    networks:
      - bykstack

  dmapper-v2:
    container_name: dmapper-v2
    image: ghcr.io/buerokratt/datamapper:pre-alpha-2.0.1
    environment:
      - PORT=3005
      - CONTENT_FOLDER=/data
    volumes:
      - ./DSL:/data
      - ./DSL.DMapper-v2/hbs:/workspace/app/views/chat-bot
      - ./DSL.DMapper-v2/js:/workspace/app/js/chat-bot
      - ./DSL.DMapper-v2/lib:/workspace/app/lib
    ports:
      - 3005:3005
    networks:
      - bykstack
  tim:
    container_name: tim
    image: ghcr.io/buerokratt/tim:pre-apha-2.1.1
    environment:
      - security.allowlist.jwt=ruuter-v1-public,ruuter-v1-private,dmapper,chat-widget,customer-service,resql,ruuter-v2-public,ruuter-v2-private
      - spring.datasource.url=jdbc:postgresql://171.22.247.156:5432/tim
      - spring.datasource.username=tim
      - spring.datasource.password=123
      - security.oauth2.client.client-id=
      - security.oauth2.client.client-secret=
      - security.oauth2.client.registered-redirect-uri=https://tim..buerokratt.ee/authenticate
      - security.oauth2.client.user-authorization-uri=https://tara-test.ria.ee/oidc/authorize
      - security.oauth2.client.access-token-uri=https://tara-test.ria.ee/oidc/token
      - security.oauth2.resource.jwk.key-set-uri=https://tara-test.ria.ee/oidc/jwks
      - auth.success.redirect.whitelist=https://admin..buerokratt.ee/auth/callback,https://.buerokratt.ee,https://.buerokratt.ee/auth/callback,https://admin..buerokratt.ee
      - frontpage.redirect.url=https://admin..buerokratt.ee/chat
      - headers.contentSecurityPolicy=upgrade-insecure-requests; default-src 'self' 'unsafe-inline' 'unsafe-eval' https://tim..buerokratt.ee https://admin..buerokratt.ee/chat https://ruuter.dv.buerokratt.ee/pub1 https://ruuter..buerokratt.ee/priv1 tim byk-ruuter-v1-public ruuter-v1-private customer-service; object-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://.buerokratt.ee https://admin..buerokratt.ee/chat https://tim..buerokratt.ee; connect-src 'self' https://.buerokratt.ee https://tim..buerokratt.ee https://admin..buerokratt.ee/chat https://ruuter..buerokratt.ee/pub1/ https://ruuter..buerokratt.ee/priv1/; frame-src 'self'; media-src 'none'
      - legacy-portal-integration.legacyUrl=arendus.eesti.ee
      - legacy-portal-integration.legacyPortalRefererMarker=https://arendus.eesti.ee/portaal
      - cors.allowedOrigins=https://test.buerokratt.ee,https://admin..buerokratt.ee/chat,https://ruuter..buerokratt.ee/pub1/,https://ruuter..buerokratt.ee/priv1/,https://tim..buerokratt.ee
      - jwt-integration.signature.issuer=.buerokratt.ee
      - jwt-integration.signature.key-store-password=123456
      - jwt-integration.signature.key-store=file:/usr/local/tomcat/jwtkeystore.jks
      - spring.profiles.active=dev
      - legacy-portal-integration.sessionCookieDomain=buerokratt.ee
      - logging.level.root=TRACE
      - server.port=8085
    ports:
      - 8085:8443

    volumes:
      - ./setup/tim/server.xml:/usr/local/tomcat/conf/server.xml:ro
      - ./setup/tim/jwtkeystore.jks:/usr/local/tomcat/jwtkeystore.jks:ro
      - ./setup/tim/cert.crt:/usr/local/tomcat/conf/cert.crt:ro
      - ./setup/tim/key.key:/usr/local/tomcat/conf/key.key:ro
    restart: always
    networks:
      - bykstack

  tim-postgresql:
    container_name: tim-postgresql
    image: postgres:14.1
    command: ["postgres", "-c", "ssl=on", "-c", "ssl_cert_file=/etc/tls/tls.crt", "-c", "ssl_key_file=/etc/tls/tls.key"]
    environment:
      - POSTGRES_USER=tim
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=tim
    volumes:
      - ./tim-db/cert.crt:/etc/tls/tls.crt
      - ./tim-db/key.key:/etc/tls/tls.key
      - tim-db:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - bykstack
      
  users-db:
    container_name: users-db
    image: postgres:14.1
    command: ["postgres", "-c", "ssl=on", "-c", "ssl_cert_file=/etc/tls/tls.crt", "-c", "ssl_key_file=/etc/tls/tls.key"]
    environment:
      - POSTGRES_USER=byk
      - POSTGRES_PASSWORD=01234
      - POSTGRES_DB=byk
    volumes:
      - ./users-db/cert.crt:/etc/tls/tls.crt
      - ./users-db/key.key:/etc/tls/tls.key
      - users-db:/var/lib/postgresql/data
    ports:
      - 5433:5432
    networks:
      - bykstack

  resql:
    container_name: resql
    image: resql
    depends_on:
      - users-db
    environment:
      - sqlms.datasources.[0].name=byk
      - sqlms.datasources.[0].jdbcUrl=jdbc:postgresql://171.22.247.13:5433/byk?sslmode=require
      - sqlms.datasources.[0].username=byk
      - sqlms.datasources.[0].password=2nH09n6Gly
      - logging.level.org.springframework.boot=INFO
    ports:
      - 8082:8082
    volumes:
      - ./DSL.Resql:/workspace/app/templates/byk
    networks:
      - bykstack
      
  gui:
    container_name: gui
    environment:
      - NODE_ENV=elopment
      - BASE_URL=http://localhost:8080
      - REACT_APP_RUUTER_API_URL=http://localhost:8080
      - REACT_APP_RUUTER_V1_PRIVATE_API_URL=http://localhost:8090
      - REACT_APP_RUUTER_V2_PRIVATE_API_URL=http://localhost:8088
      - REACT_APP_CUSTOMER_SERVICE_LOGIN=http://localhost:3004/et/-auth
      - CHOKIDAR_USEPOLLING=true
      - PORT=3001
    build:
      context: ./GUI
      # target: web // To be used in production (Dockerfile)
      dockerfile: Dockerfile.dev
    ports:
      - 3001:3001
    volumes:
      - /app/node_modules
      - ./GUI:/app
    networks:
      - bykstack
    cpus: "0.5" # Example CPU limit
    mem_limit: "1G" # Example memory limit

  chat-widget:
    container_name: chat-widget
    image: chat-widget
    ports:
      - 3003:3003
    networks:
      - bykstack

  customer-service:
    container_name: customer-service
    image: ghcr.io/buerokratt/customer-service:pre-apha-2.0.1
    ports:
      - 3004:443
    volumes:
      - ./setup/customer-support/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./setup/customer-support/env-config.js:/usr/share/nginx/html/customer-service/env-config.js:ro
      - ./setup/customer-support/cert.crt:/etc/ssl/certs/cert.crt:ro
      - ./setup/customer-support/key.key:/etc/ssl/certs/key.key:ro
    networks:
      - bykstack


networks:
  bykstack:
    name: bykstack
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1400
