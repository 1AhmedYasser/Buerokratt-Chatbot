assignIncoming:
  assign:
    chatId: '${incoming.params.chatId}'

getDurationTotalInSeconds:
  call: http.post
  args:
    # TODO: replace with env variable
    url: https://byk-resql:8443/get-ended-chats-total-duration-in-seconds
  result: durationTotalInSeconds

#checkChatIdParameter:
#  switch:
#    - condition: ${chatId != null && chatId !== "" && !!chatId}
#      next: getUnassignedChatsWithChatId
#  next: getUnassignedChats

getUnassignedChats:
  call: http.post
  args:
    # TODO: replace with env variable
    url: https://byk-resql:8443/get-unassigned-chat-total-with-position-by-chat-id
    body:
      chatId: "${chatId ? chatId : ''}"
  result: unassignedChats

assignResponseVariables:
  assign:
    durationInSeconds: ${durationTotalInSeconds.response.body[0].durationInSeconds}
    positionInUnassignedChats: ${unassignedChats.response.body[0].positionInUnassignedChats}
    unassignedChatTotal: ${unassignedChats.response.body[0].unassignedChatTotal}
#    calculatedWaitingTime: ${durationInSeconds / unassignedChatTotal}

#ifPositionAbove0:
#  switch:
#    - condition: ${positionInUnassignedChats > 0 || positionInUnassignedChats != '0'}
#      next: return1
#  next: return2
#
#return1:
#  assign:
#    calculatedDuration: esimene
#
#return2:
#  assign:
#    calculatedDuration: teine

getEstimatedWaitingTime:
  call: http.post
  args:
    # TODO: replace with env variable
    url: https://byk-dmapper:8443/json/v2/reflect_waiting_time
    body:
      durationInSeconds: '${durationInSeconds}'
      positionInUnassignedChats: '${positionInUnassignedChats}'
  result: estimatedWaitingTime
  next: return

return:
  return: ${estimatedWaitingTime.response.body}
  next: end

#returnWithChatIdParameter:
#  return: ${position}
#  next: end
#
#returnWithoutChatIdParameter:
#  return: ${chatSeconds / openChats}
#  next: end
